;; Object custom/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "custom/"
  :tables (list 
   (semanticdb-table "customizations.el"
    :major-mode 'emacs-lisp-mode
    :tags '(("use-backup-dir" variable (:constant-flag t :default-value t) nil [1 28]) ("bbdb" include nil nil [30 45]) ("browse-kill-ring" include nil nil [46 73]) ("cldoc" include nil nil [74 90]) ("color-theme" include nil nil [91 113]) ("doc-view" include nil nil [136 155]) ("epa-setup" include nil nil [156 176]) ("emacs-goodies-el" include nil nil [198 225]) ("ffap" include nil nil [226 241]) ("highlight-parentheses" include nil nil [242 274]) ("hippie-exp" include nil nil [275 296]) ("htmlize" include nil nil [297 315]) ("planner" include nil nil [316 334]) ("ibuffer" include nil nil [335 353]) ("ibuf-ext" include nil nil [354 373]) ("printing" include nil nil [374 393]) ("snippet" include nil nil [394 412]) ("smart-snippet" include nil nil [413 437]) ("w3m" include nil nil [455 469]) ("load-library" code nil nil [471 491]) ("load-library" code nil nil [492 524]) ("load-library" code nil nil [525 549]) ("load-library" code nil nil [550 578]) ("uniquify" include nil nil [611 630]) ("setq" code nil nil [631 673]) ("setq" code nil nil [674 703]) ("setq" code nil nil [704 741]) ("setq" code nil nil [776 816]) ("load-library" code nil nil [852 870]) ("setq" code nil nil [871 912]) ("setq" code nil nil [913 946]) ("bbdb-initialize" code nil nil [947 964]) ("setenv" code nil nil [966 1014]) ("yasnippet" include nil nil [1016 1036]) ("yas/initialize" code nil nil [1037 1053]) ("yas/load-directory" code nil nil [1054 1127]) ("load-library" code nil nil [1129 1155]) ("mc-setversion" code nil nil [1156 1177]) ("mc-install-write-mode" function (:prototype-flag t :user-visible-flag t) nil [1178 1229]) ("mc-install-read-mode" function (:prototype-flag t :user-visible-flag t) nil [1230 1280]) ("add-hook" code nil nil [1281 1337]) ("add-hook" code nil nil [1338 1390]) ("add-hook" code nil nil [1391 1446]) ("setq" code nil nil [1481 1508]) ("setq" code nil nil [1563 1591]) ("my-sign-message" function nil nil [1592 1677]) ("add-hook" code nil nil [1678 1724]) ("setenv" code nil nil [1726 1762]) ("pymacs-apply" function (:prototype-flag t) nil [1763 1796]) ("pymacs-call" function (:prototype-flag t) nil [1797 1829]) ("pymacs-eval" function (:prototype-flag t :user-visible-flag t) nil [1830 1868]) ("pymacs-exec" function (:prototype-flag t :user-visible-flag t) nil [1869 1907]) ("pymacs-load" function (:prototype-flag t :user-visible-flag t) nil [1908 1946]) ("setq" code nil nil [1985 2017]) ("setq" code nil nil [2018 2209]) ("emacs-goodies-el" include nil nil [2233 2260]) ("color-theme-clarity" code nil nil [2357 2378]) ("iswitchb-mode" code nil nil [2474 2491]) ("setq" code nil nil [2492 2528]) ("ido-mode" code nil nil [2529 2541]) ("load" code nil nil [2543 2559]) ("prefer-coding-system" code nil nil [2592 2621]) ("add-to-list" code nil nil [2622 2669]) ("server-start" code nil nil [2695 2709]) ("setq" code nil nil [2710 2734]) ("display-time" code nil nil [2735 2749]) ("column-number-mode" code nil nil [2750 2772]) ("global-hl-line-mode" code nil nil [2774 2797]) ("set-face-background" code nil nil [2798 2835]) ("setq" code nil nil [2837 2858]) ("set-language-environment" code nil nil [2859 2892]) ("set-default-coding-systems" code nil nil [2893 2940]) ("setq" code nil nil [2941 2988]) ("setq" code nil nil [2989 3037]) ("setq" code nil nil [3038 3085]) ("set-keyboard-coding-system" code nil nil [3086 3133]) ("set-terminal-coding-system" code nil nil [3134 3181]) ("set-clipboard-coding-system" code nil nil [3182 3229]) ("set-selection-coding-system" code nil nil [3230 3277]) ("setq" code nil nil [3278 3331]) ("setq" code nil nil [3332 3362]) ("setq" code nil nil [3363 3986]) ("setq" code nil nil [3987 4022]) ("setq" code nil nil [4023 4043]) ("setq" code nil nil [4044 4076]) ("setq" code nil nil [4077 4113]) ("setq" code nil nil [4114 4145]) ("set-background-color" code nil nil [4146 4176]) ("set-foreground-color" code nil nil [4177 4207]) ("setq-default" code nil nil [4237 4267]) ("setq-default" code nil nil [4268 4311]) ("setq" code nil nil [4312 4339]) ("setq" code nil nil [4340 4375]) ("setq" code nil nil [4376 4410]) ("setq" code nil nil [4411 4444]) ("setq" code nil nil [4445 4573]) ("setq" code nil nil [4574 4611]) ("setq" code nil nil [4612 4640]) ("setq" code nil nil [4641 4677]) ("setq" code nil nil [4678 4708]) ("setq" code nil nil [4709 4759]) ("fset" code nil nil [4760 4789]) ("setq" code nil nil [4790 5111]) ("setq" code nil nil [5112 5152]) ("setq" code nil nil [5153 5557]) ("if" code nil nil [5593 5645]) ("if" code nil nil [5646 5694]) ("if" code nil nil [5695 5743]) ("global-font-lock-mode" code nil nil [5744 5769]) ("put" code nil nil [5770 5806]) ("put" code nil nil [5807 5841]) ("add-hook" code nil nil [5842 5893]) ("add-hook" code nil nil [5895 6363]) ("let" code nil nil [6402 6520]) ("kill-ring-save" function (:arguments ("before" "slickcopy" "activate" "compile")) nil [6522 6818]) ("kill-region" function (:arguments ("before" "slickcut" "activate" "compile")) nil [6820 7112]) ("setq" code nil nil [7144 7681]) ("add-hook" code nil nil [7728 7854]) ("ibuffer-generate-filter-groups" function (:arguments ("after" "reverse-ibuffer-groups" "nil" "activate")) nil [7891 8028]) ("icy-mode" code nil nil [8030 8042]) ("setq" code nil nil [8044 8107]) ("read-abbrev-file" code nil nil [8108 8145]) ("load-library" code nil nil [8146 8172]) ("add-hook" code nil nil [8174 8213]) ("define-auto-insert" code nil nil [8214 8287]) ("winring" include nil nil [8434 8452]) ("setq" code nil nil [8453 8480]) ("setq" code nil nil [8481 8517]) ("winring-initialize" code nil nil [8519 8539]) ("winring-new-configuration" code nil nil [8540 8567]) ("winring-prev-configuration" code nil nil [8568 8596]))
    :file "customizations.el"
    :pointmax 8597
    :unmatched-syntax 'nil
    )
   )
  :file "semantic.cache"
  :semantic-tag-version "2.0pre4"
  :semanticdb-version "2.0pre4"
  )
