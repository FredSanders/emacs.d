(global-set-key [f3] 'eshell)
(global-set-key [f4] 'replace-regexp)
(global-set-key [f5] 'call-last-kbd-macro)
(global-set-key (kbd "C-h") 'backward-delete-char-untabify)
(global-set-key (kbd "C-x h") 'help-command)
(global-set-key (kbd "C-c C-c") 'comment-region)
(global-set-key (kbd "C-c C-u") 'uncomment-region)
(global-set-key [s-tab] 'lisp-complete-symbol)
(global-set-key [C-tab] 'ibuffer)
(global-set-key (kbd "C-x C-b") 'ibuffer)
(global-set-key (kbd "M-G") 'what-line)
(global-set-key (kbd "C-x C-j") 'next-error)
(global-set-key (kbd "C-x C-n") 'previous-error)
(global-set-key (kbd "C-x m") 'execute-extended-command)
(global-set-key (kbd "C-x C-m") 'execute-extended-command)
(global-set-key (kbd "C-w") 'backward-kill-word)
(global-set-key (kbd "C-x C-k") 'kill-region)
(global-set-key (kbd "C-s") 'isearch-forward-regexp)
(global-set-key (kbd "C-r") 'isearch-backward-regexp)
(global-set-key (kbd "M-s") 'isearch-forward)
(global-set-key (kbd "M-r") 'isearch-backward)
(global-set-key [(shift down)] (lambda (&optional n) (interactive "p") (scroll-up (or n 1))))
(global-set-key [(shift up)]   (lambda (&optional n) (interactive "p") (scroll-down (or n 1))))
(global-set-key (kbd "M-p") 'dabbrev-completion)
(global-set-key (kbd "C-c w")  'woman)
(global-set-key (kbd "C-c o")  'occur)
(global-set-key (kbd "C-c e") 'eval-and-replace)
(global-set-key (kbd "M-#") 'calc-dispatch)
(global-set-key (kbd "C-x C-p") 'chop-move-up)
(global-set-key (kbd "C-x C-n") 'chop-move-down)
(global-set-key (kbd "C-x C-y") 'copy-line)
(global-set-key (kbd "C-c m") 'vm)
(global-set-key [f21] 'next-buffer)
(global-set-key [f22] 'previous-buffer)

(define-key isearch-mode-map (kbd "C-h") 'isearch-delete-char)
(define-key lisp-interaction-mode-map (kbd "C-m") 'newline-and-indent)
(define-key emacs-lisp-mode-map (kbd "C-c C-c") 'comment-region)
(define-key smalltalk-mode-map (kbd "C-c t s") 'smalltalk-subclass-template)
(define-key scheme-mode-map (kbd "C-c i") 'scheme-include-file)

(add-hook 'dired-mode-hook '(lambda () (define-key dired-mode-map (kbd "C-c d w") 'wdired-change-to-wdired-mode)))

(defalias 'qrr 'query-replace-regexp)

(if (not (string-match "GNU Emacs 2[2-9]" (version))) (global-set-key (kbd "M-g") 'goto-line))

(if (equal (emacs-type) 'emacs-window)
    (global-unset-key (kbd "C-z")))
