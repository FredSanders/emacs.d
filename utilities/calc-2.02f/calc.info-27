Info file: calc.info,    -*-Text-*-
produced by `texinfo-format-buffer'
from file `calc.texinfo'
using `texinfmt.el' version 2.42 of  7 Jul 2006.

This file documents Calc, the GNU Emacs calculator.

Copyright (C) 1990, 1991 Free Software Foundation, Inc.

Permission is granted to make and distribute verbatim copies of this
manual provided the copyright notice and this permission notice are
preserved on all copies.

Permission is granted to copy and distribute modified versions of this
manual under the conditions for verbatim copying, provided also that
the section entitled "GNU General Public License" is included exactly
as in the original, and provided that the entire resulting derived
work is distributed under the terms of a permission notice identical
to this one.

Permission is granted to copy and distribute translations of this
manual into another language, under the above conditions for modified
versions, except that the section entitled "GNU General Public
License" may be included in a translation approved by the author
instead of in the original English.




File: calc.info, Node: Variable Index, Next: Lisp Function Index, Prev: Concept Index, Up: Top

Index of Variables
******************

The variables in this list that do not contain dashes are accessible
as Calc variables.  Add a `var-' prefix to get the name of the
corresponding Lisp variable.

The remaining variables are Lisp variables suitable for `setq'ing in
your `.emacs' file.


* Menu:

* AlgSimpRules:                 Automatic Rewrites.     (line 134)
* All:                          Declaration Basics.     (line  48)
* all:                          Multi-Phase Rewrite Rules.  (line  11)
* calc-alg-ent-map:             Hooks.                  (line 104)
* calc-autoload-directory:      Installation.           (line 204)
* calc-define:                  Defining Functions.     (line 144)
* calc-digit-map:               Hooks.                  (line  98)
* calc-edit-mode-hook:          Hooks.                  (line  64)
* calc-edit-mode-map:           Hooks.                  (line 113)
* calc-embedded-announce-formula: Customizing Embedded Mode.  (line 112)
* calc-embedded-close-formula:  Customizing Embedded Mode.  (line  74)
* calc-embedded-close-mode:     Customizing Embedded Mode.  (line 132)
* calc-embedded-close-new-formula: Customizing Embedded Mode.  (line 105)
* calc-embedded-close-plain:    Customizing Embedded Mode.  (line  93)
* calc-embedded-close-word:     Customizing Embedded Mode.  (line  82)
* calc-embedded-open-formula:   Customizing Embedded Mode.  (line  18)
* calc-embedded-open-mode:      Customizing Embedded Mode.  (line 126)
* calc-embedded-open-new-formula: Customizing Embedded Mode.  (line  98)
* calc-embedded-open-plain:     Customizing Embedded Mode.  (line  86)
* calc-embedded-open-word:      Customizing Embedded Mode.  (line  82)
* calc-end-hook:                Hooks.                  (line  44)
* calc-ext-load-hook:           Hooks.                  (line  19)
* calc-gnuplot-default-device:  Devices.                (line  77)
* calc-gnuplot-default-output:  Devices.                (line  77)
* calc-gnuplot-name:            Graphics.               (line  13)
* calc-gnuplot-plot-command:    Devices.                (line  77)
* calc-gnuplot-print-command:   Devices.                (line  77)
* calc-gnuplot-print-device:    Devices.                (line  77)
* calc-gnuplot-print-output:    Devices.                (line  77)
* calc-info-filename:           Installation.           (line 302)
* calc-load-hook:               Hooks.                  (line  14)
* calc-local-var-list:          Hooks.                  (line 125)
* calc-mode-hook:               Hooks.                  (line  28)
* calc-mode-map:                Hooks.                  (line  89)
* calc-mode-save-hook:          Hooks.                  (line  72)
* calc-mode-var-list:           Hooks.                  (line 118)
* calc-other-modes:             Hooks.                  (line  82)
* calc-reset-hook:              Hooks.                  (line  78)
* calc-scan-for-dels:           Installation.           (line 244)
* calc-settings-file:           Installation.           (line 396)
* calc-start-hook:              Hooks.                  (line  22)
* calc-store-var-map:           Hooks.                  (line 108)
* calc-trail-mode-hook:         Hooks.                  (line  38)
* calc-trail-window-hook:       Hooks.                  (line  58)
* calc-window-hook:             Hooks.                  (line  50)
* calc-Y-help-msgs:             Defining Simple Commands.  (line  88)
* CommuteRules:                 Rearranging with Selections.  (line  75)
* Decls:                        Declaration Basics.     (line  23)
* DistribRules:                 Rearranging with Selections.  (line  56)
* e:                            Scientific Functions.   (line  12)
* EvalRules:                    Automatic Rewrites.     (line   7)
* e:                            Variables.              (line  40)
* ExtSimpRules:                 Automatic Rewrites.     (line 147)
* FactorRules:                  Polynomials.            (line  40)
* FitRules:                     Curve Fitting Details.  (line 150)
* gamma:                        Scientific Functions.   (line  12)
* gamma:                        Variables.              (line  40)
* GenCount:                     Multiple Solutions.     (line  36)
* Holidays:                     Business Days.          (line  25)
* i:                            Complex Formats.        (line  15)
* inf:                          Infinities.             (line   7)
* IntegAfterRules:              Customizing the Integrator.  (line  91)
* IntegLimit:                   Integration.            (line  43)
* IntegRules:                   Customizing the Integrator.  (line   7)
* IntegSimpRules:               Customizing the Integrator.  (line  78)
* InvertRules:                  Rearranging with Selections.  (line 100)
* i:                            Variables.              (line  40)
* JumpRules:                    Rearranging with Selections.  (line 105)
* LineStyles:                   Graphics Options.       (line 104)
* load-path:                    Installation.           (line 146)
* math-daylight-savings-hook:   Time Zones.             (line 115)
* math-tzone-names:             Time Zones.             (line  61)
* MergeRules:                   Rearranging with Selections.  (line  69)
* Model1:                       Standard Nonlinear Models.  (line 120)
* Model2:                       Standard Nonlinear Models.  (line 120)
* Modes:                        Modes Variable.         (line  12)
* nan:                          Infinities.             (line   7)
* NegateRules:                  Rearranging with Selections.  (line  91)
* phi:                          Variables.              (line  40)
* pi:                           Scientific Functions.   (line  12)
* pi:                           Variables.              (line  40)
* PlotData1:                    Managing Curves.        (line  30)
* PlotData2:                    Managing Curves.        (line  30)
* PlotRejects:                  Basic Graphics.         (line  56)
* PointStyles:                  Graphics Options.       (line 104)
* q0:                           Storing Variables.      (line   7)
* q9:                           Storing Variables.      (line   7)
* RandSeed:                     Random Numbers.         (line  48)
* remember:                     Other Features of Rewrite Rules.  (line 273)
* TimeZone:                     Time Zones.             (line  71)
* uinf:                         Infinities.             (line   7)
* UnitSimpRules:                Automatic Rewrites.     (line 147)
* Units:                        User-Defined Units.     (line   9)



File: calc.info, Node: Lisp Function Index, Prev: Variable Index, Up: Top

Index of Lisp Math Functions
****************************

The following functions are meant to be used with `defmath', not
`defun' definitions.  For names that do not start with `calc-',
the corresponding full Lisp name is derived by adding a prefix of
`math-'.


* Menu:

* abs-approx:                   Computational Lisp Functions.  (line 157)
* anglep:                       Predicates.             (line  84)
* apply-rewrites:               Symbolic Lisp Functions.  (line 233)
* beforep:                      Predicates.             (line 153)
* build-polynomial-expr:        Symbolic Lisp Functions.  (line 467)
* build-vector:                 Vector Lisp Functions.  (line  37)
* calc-binary-op:               Stack Lisp Functions.   (line 135)
* calc-change-current-selection: Symbolic Lisp Functions.  (line  52)
* calc-check-defines:           Defining Functions.     (line 174)
* calc-clear-command-flag:      Interactive Lisp Functions.  (line  20)
* calc-cursor-stack-index:      Stack Lisp Functions.   (line 153)
* calc-do-alg-entry:            Formatting Lisp Functions.  (line  32)
* calc-encase-atoms:            Symbolic Lisp Functions.  (line  40)
* calc-enter-result:            Defining Stack Commands.  (line  60)
* calc-enter-result:            Stack Lisp Functions.   (line  98)
* calc-eval:                    Formatting Lisp Functions.  (line  11)
* calc-find-assoc-parent-formula: Symbolic Lisp Functions.  (line  74)
* calc-find-nth-part:           Symbolic Lisp Functions.  (line  59)
* calc-find-parent-formula:     Symbolic Lisp Functions.  (line  66)
* calc-find-selected-part:      Symbolic Lisp Functions.  (line  46)
* calc-find-sub-formula:        Symbolic Lisp Functions.  (line  88)
* calc-grow-assoc-formula:      Symbolic Lisp Functions.  (line  82)
* calc-is-hyperbolic:           Interactive Lisp Functions.  (line  57)
* calc-is-inverse:              Interactive Lisp Functions.  (line  53)
* calc-normalize:               Stack Lisp Functions.   (line  72)
* calc-pop-stack:               Stack Lisp Functions.   (line  55)
* calc-prepare-selection:       Symbolic Lisp Functions.  (line  11)
* calc-push-list:               Stack Lisp Functions.   (line  11)
* calc-record-list:             Stack Lisp Functions.   (line  66)
* calc-record-undo:             Interactive Lisp Functions.  (line  24)
* calc-record-why:              Interactive Lisp Functions.  (line  39)
* calc-refresh:                 Stack Lisp Functions.   (line 169)
* calc-replace-sub-formula:     Symbolic Lisp Functions.  (line  95)
* calc-select-buffer:           Defining Simple Commands.  (line  52)
* calc-set-command-flag:        Defining Simple Commands.  (line  56)
* calc-set-command-flag:        Interactive Lisp Functions.  (line  14)
* calc-slow-wrapper:            Defining Stack Commands.  (line  50)
* calc-stack-size:              Stack Lisp Functions.   (line 148)
* calc-substack-height:         Stack Lisp Functions.   (line 160)
* calc-top-list-n:              Defining Stack Commands.  (line  55)
* calc-top-list-n:              Stack Lisp Functions.   (line  81)
* calc-top-list:                Stack Lisp Functions.   (line  28)
* calc-top-n:                   Stack Lisp Functions.   (line  92)
* calc-unary-op:                Stack Lisp Functions.   (line 123)
* calc-wrapper:                 Defining Simple Commands.  (line  38)
* cancel-common-factor:         Symbolic Lisp Functions.  (line 187)
* check-unit-name:              Symbolic Lisp Functions.  (line 474)
* col-matrix:                   Vector Lisp Functions.  (line  52)
* common-constant-factor:       Symbolic Lisp Functions.  (line 181)
* compare:                      Computational Lisp Functions.  (line 106)
* comp-ascent:                  Formatting Lisp Functions.  (line 111)
* comp-descent:                 Formatting Lisp Functions.  (line 116)
* comp-first-char:              Formatting Lisp Functions.  (line 120)
* comp-height:                  Formatting Lisp Functions.  (line 108)
* compile-rewrites:             Symbolic Lisp Functions.  (line 225)
* comp-last-char:               Formatting Lisp Functions.  (line 125)
* complete:                     Argument Qualifiers.    (line  23)
* complexp:                     Predicates.             (line  92)
* compose-expr:                 Formatting Lisp Functions.  (line  83)
* composition-to-string:        Formatting Lisp Functions.  (line  98)
* comp-width:                   Formatting Lisp Functions.  (line 105)
* constp:                       Predicates.             (line 139)
* convert-temp:                 Calling Calc from Your Programs.  (line 315)
* copy-matrix:                  Vector Lisp Functions.  (line 106)
* defmath:                      Defining Functions.     (line   7)
* deriv:                        Symbolic Lisp Functions.  (line 260)
* dimension-error:              Vector Lisp Functions.  (line  31)
* div-mod:                      Computational Lisp Functions.  (line 202)
* e:                            Computational Lisp Functions.  (line 160)
* equal-int:                    Predicates.             (line 175)
* equal:                        Predicates.             (line 163)
* evaluate-expr:                Computational Lisp Functions.  (line  46)
* evenp:                        Predicates.             (line  66)
* expr-contains-count:          Symbolic Lisp Functions.  (line 375)
* expr-contains:                Symbolic Lisp Functions.  (line 365)
* expr-contains-vars:           Symbolic Lisp Functions.  (line 384)
* expr-depends:                 Symbolic Lisp Functions.  (line 379)
* expr-height:                  Symbolic Lisp Functions.  (line 405)
* expr-subst:                   Symbolic Lisp Functions.  (line 388)
* expr-weight:                  Symbolic Lisp Functions.  (line 400)
* extract-units:                Symbolic Lisp Functions.  (line 506)
* fixnatnump:                   Predicates.             (line  50)
* fixnum:                       Argument Qualifiers.    (line  41)
* fixnum:                       Computational Lisp Functions.  (line 124)
* fixnump:                      Predicates.             (line  44)
* flatten-vector:               Vector Lisp Functions.  (line 102)
* float:                        Argument Qualifiers.    (line  48)
* float:                        Computational Lisp Functions.  (line  99)
* floatp:                       Predicates.             (line  87)
* format-flat-expr:             Formatting Lisp Functions.  (line  54)
* format-nice-expr:             Formatting Lisp Functions.  (line  66)
* format-number:                Formatting Lisp Functions.  (line  51)
* format-value:                 Formatting Lisp Functions.  (line  73)
* frac-gcd:                     Symbolic Lisp Functions.  (line 204)
* from-hms:                     Computational Lisp Functions.  (line 222)
* from-radians-2:               Computational Lisp Functions.  (line 240)
* from-radians:                 Computational Lisp Functions.  (line 232)
* full-circle:                  Computational Lisp Functions.  (line 184)
* half-circle:                  Computational Lisp Functions.  (line 182)
* idiv:                         Computational Lisp Functions.  (line 137)
* idivmod:                      Computational Lisp Functions.  (line 149)
* imod:                         Computational Lisp Functions.  (line 143)
* inexact-value:                Predicates.             (line 215)
* integer:                      Argument Qualifiers.    (line  31)
* integer-log2:                 Computational Lisp Functions.  (line 197)
* integerp:                     Predicates.             (line  41)
* integ:                        Symbolic Lisp Functions.  (line 294)
* interactive:                  Defining Simple Commands.  (line   7)
* is-polynomial:                Symbolic Lisp Functions.  (line 420)
* isqrt:                        Computational Lisp Functions.  (line 211)
* is-true:                      Predicates.             (line 203)
* lessp:                        Predicates.             (line 144)
* ln-10:                        Computational Lisp Functions.  (line 160)
* ln-2:                         Computational Lisp Functions.  (line 160)
* looks-evenp:                  Predicates.             (line  69)
* looks-negp:                   Predicates.             (line  35)
* make-float:                   Computational Lisp Functions.  (line  69)
* make-frac:                    Computational Lisp Functions.  (line  65)
* make-intv:                    Computational Lisp Functions.  (line  82)
* make-mod:                     Computational Lisp Functions.  (line  93)
* make-sdev:                    Computational Lisp Functions.  (line  75)
* make-vec:                     Vector Lisp Functions.  (line  42)
* map-tree:                     Symbolic Lisp Functions.  (line 211)
* map-vec-2:                    Vector Lisp Functions.  (line  62)
* map-vec:                      Vector Lisp Functions.  (line  57)
* match-patterns:               Symbolic Lisp Functions.  (line 254)
* mat-col:                      Vector Lisp Functions.  (line  88)
* mat-dimens:                   Vector Lisp Functions.  (line  20)
* math-concat:                  Vector Lisp Functions.  (line  11)
* math-defcache:                Computational Lisp Functions.  (line 170)
* math-defintegral-2:           Symbolic Lisp Functions.  (line 326)
* math-defintegral:             Symbolic Lisp Functions.  (line 298)
* math-defsimplify:             Symbolic Lisp Functions.  (line 133)
* math-equal:                   Predicates.             (line 169)
* math-prev-weekday-in-month:   Time Zones.             (line 138)
* math-std-daylight-savings:    Time Zones.             (line 115)
* mat-less-col:                 Vector Lisp Functions.  (line  96)
* mat-less-row:                 Vector Lisp Functions.  (line  92)
* matrixp:                      Predicates.             (line 115)
* mat-row:                      Vector Lisp Functions.  (line  83)
* messy-integerp:               Predicates.             (line  58)
* multi-subst:                  Symbolic Lisp Functions.  (line 394)
* natnum:                       Argument Qualifiers.    (line  37)
* natnump:                      Predicates.             (line  47)
* nearly-equal:                 Predicates.             (line 181)
* nearly-zerop:                 Predicates.             (line 195)
* negp:                         Predicates.             (line  23)
* normalize:                    Computational Lisp Functions.  (line  21)
* numberp:                      Predicates.             (line 102)
* numdigs:                      Computational Lisp Functions.  (line 111)
* num-integerp:                 Predicates.             (line  53)
* num-natnump:                  Predicates.             (line  63)
* numvecp:                      Predicates.             (line 112)
* objectp:                      Predicates.             (line 122)
* objvecp:                      Predicates.             (line 128)
* oddp:                         Predicates.             (line  73)
* overflow:                     Predicates.             (line 226)
* pi:                           Computational Lisp Functions.  (line 162)
* pi-over-180:                  Computational Lisp Functions.  (line 160)
* pi-over-2:                    Computational Lisp Functions.  (line 160)
* pi-over-4:                    Computational Lisp Functions.  (line 160)
* polar-complexp:               Predicates.             (line  99)
* poly-mix:                     Symbolic Lisp Functions.  (line 457)
* poly-mul:                     Symbolic Lisp Functions.  (line 463)
* polynomial-base:              Symbolic Lisp Functions.  (line 441)
* polynomial-p:                 Symbolic Lisp Functions.  (line 410)
* poly-simplify:                Symbolic Lisp Functions.  (line 453)
* posp:                         Predicates.             (line  31)
* pow:                          Computational Lisp Functions.  (line 153)
* power-of-2:                   Computational Lisp Functions.  (line 192)
* pow-mod:                      Computational Lisp Functions.  (line 206)
* prime-test:                   Computational Lisp Functions.  (line 254)
* primp:                        Predicates.             (line 133)
* quarter-circle:               Computational Lisp Functions.  (line 182)
* quarter-integer:              Computational Lisp Functions.  (line 280)
* quotient:                     Computational Lisp Functions.  (line 132)
* random-digit:                 Computational Lisp Functions.  (line 244)
* random-digits:                Computational Lisp Functions.  (line 247)
* random-float:                 Computational Lisp Functions.  (line 251)
* ratp:                         Predicates.             (line  76)
* read-expr:                    Formatting Lisp Functions.  (line  20)
* read-exprs:                   Formatting Lisp Functions.  (line  27)
* read-number:                  Formatting Lisp Functions.  (line  15)
* realp:                        Predicates.             (line  80)
* rect-complexp:                Predicates.             (line  96)
* reduce-cols:                  Vector Lisp Functions.  (line  78)
* reduce-vec:                   Vector Lisp Functions.  (line  73)
* reject-arg:                   Predicates.             (line 208)
* remove-units:                 Symbolic Lisp Functions.  (line 502)
* rewrite-heads:                Symbolic Lisp Functions.  (line 245)
* rewrite:                      Symbolic Lisp Functions.  (line 249)
* row-matrix:                   Vector Lisp Functions.  (line  47)
* scalarp:                      Predicates.             (line 105)
* scale-int:                    Computational Lisp Functions.  (line 116)
* scale-rounding:               Computational Lisp Functions.  (line 120)
* simplify-extended:            Symbolic Lisp Functions.  (line 118)
* simplify:                     Symbolic Lisp Functions.  (line  99)
* simplify-units:               Symbolic Lisp Functions.  (line 128)
* single-units-in-expr-p:       Symbolic Lisp Functions.  (line 489)
* solve-eqn:                    Symbolic Lisp Functions.  (line 354)
* solve-for:                    Symbolic Lisp Functions.  (line 332)
* solve-system:                 Symbolic Lisp Functions.  (line 360)
* sort-intv:                    Computational Lisp Functions.  (line  88)
* sqr:                          Computational Lisp Functions.  (line 129)
* sqrt-e:                       Computational Lisp Functions.  (line 160)
* sqrt-two-pi:                  Computational Lisp Functions.  (line 160)
* square-matrixp:               Predicates.             (line 119)
* swap-rows:                    Vector Lisp Functions.  (line 114)
* tderiv:                       Symbolic Lisp Functions.  (line 289)
* to-fraction:                  Computational Lisp Functions.  (line 275)
* to-hms:                       Computational Lisp Functions.  (line 216)
* to-radians-2:                 Computational Lisp Functions.  (line 236)
* to-radians:                   Computational Lisp Functions.  (line 228)
* to-simple-fraction:           Computational Lisp Functions.  (line 269)
* to-standard-units:            Symbolic Lisp Functions.  (line 495)
* transpose:                    Vector Lisp Functions.  (line  99)
* two-pi:                       Computational Lisp Functions.  (line 160)
* underflow:                    Predicates.             (line 230)
* units-in-expr-p:              Symbolic Lisp Functions.  (line 483)
* vec-length:                   Vector Lisp Functions.  (line  15)
* vectorp:                      Predicates.             (line 108)
* with-extra-prec:              Computational Lisp Functions.  (line  51)
* zerop:                        Predicates.             (line  15)

